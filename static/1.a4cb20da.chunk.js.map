{"version":3,"sources":["webpack:///static/1.a4cb20da.chunk.js","webpack:///./catalog/text-input/inferred.md?267a","webpack:///./catalog/text-input/inferred.md"],"names":["webpackJsonp","1318","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","1352"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,QAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/1.a4cb20da.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 1318:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(3);\n    var createReactClass = __webpack_require__(79);\n    var PageRenderer = __webpack_require__(564).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(1352)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./inferred.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./inferred.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 1352:\n/***/ (function(module, exports) {\n\nmodule.exports = \"A text input control with a clickable inline confidence indicator.\\n\\n```hint|directive\\nThese components require the [Faithlife Bootstrap base stylesheet](/bootstrap/stylesheet) to be loaded globally in your app.\\n```\\n\\n### Inferred typeahead\\n\\n```\\nimport { InferredTypeahead } from '@faithlife/styled-ui/dist/text-input.js';\\nimport '@faithlife/styled-ui/dist/text-input.css';\\n```\\n\\n```react\\nshowSource: false\\nstate: { value: 'Washington', confirmed: false }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Current selection: {state.value}</Label>\\n\\t\\t<InferredTypeahead\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.9}\\n\\t\\t\\tonChange={value => { setState({ value, confirmed: true })}}\\n\\t\\t\\tonConfirm={value => { setState({ confirmed: true })}}\\n\\t\\t\\toptions={['Washington','California','Texas']}\\n\\t\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t\\t\\tdefaultInputValue={state.value}\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n### Inferred text input\\n\\n```\\nimport { InferredText } from '@faithlife/styled-ui/dist/text-input.js';\\n```\\n\\n```react\\nshowSource: false\\nstate: { value: 'This value was guessed', confirmed: false }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>High Confidence</Label>\\n\\t\\t<InferredText\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.9}\\n\\t\\t\\tonChange={e => setState({ value: e.target.value, confirmed: true })}\\n\\t\\t\\tonConfirm={() => setState({ confirmed: true })}\\n\\t\\t\\tvalue={state.value}\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n```react\\nshowSource: false\\nstate: { value: 'This value was guessed', confirmed: false }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Medium Confidence</Label>\\n\\t\\t<InferredText\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.7}\\n\\t\\t\\tonChange={e => setState({ value: e.target.value, confirmed: true })}\\n\\t\\t\\tonConfirm={() => setState({ confirmed: true })}\\n\\t\\t\\tvalue={state.value}\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n```react\\nshowSource: false\\nstate: { value: 'This value was guessed', confirmed: false }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Low Confidence</Label>\\n\\t\\t<InferredText\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.6}\\n\\t\\t\\tonChange={e => setState({ value: e.target.value, confirmed: true })}\\n\\t\\t\\tonConfirm={() => setState({ confirmed: true })}\\n\\t\\t\\tvalue={state.value}\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n### Focusable Input\\n```react\\nshowSource: false\\n---\\n<InferredTypeaheadFocusDemo />\\n```\\n\\n```react\\nshowSource: false\\n---\\n<InferredTextFocusDemo />\\n```\\n\\n\\n## Component PropTypes\\n```react\\nnoSource: true\\n---\\n<div>\\n\\t<DocgenTable component={InferredTypeahead} />\\n\\t<DocgenTable component={InferredText} />\\n</div>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/1.a4cb20da.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./inferred.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./inferred.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./inferred.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/text-input/inferred.md\n// module id = 1318\n// module chunks = 1","module.exports = \"A text input control with a clickable inline confidence indicator.\\n\\n```hint|directive\\nThese components require the [Faithlife Bootstrap base stylesheet](/bootstrap/stylesheet) to be loaded globally in your app.\\n```\\n\\n### Inferred typeahead\\n\\n```\\nimport { InferredTypeahead } from '@faithlife/styled-ui/dist/text-input.js';\\nimport '@faithlife/styled-ui/dist/text-input.css';\\n```\\n\\n```react\\nshowSource: false\\nstate: { value: 'Washington', confirmed: false }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Current selection: {state.value}</Label>\\n\\t\\t<InferredTypeahead\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.9}\\n\\t\\t\\tonChange={value => { setState({ value, confirmed: true })}}\\n\\t\\t\\tonConfirm={value => { setState({ confirmed: true })}}\\n\\t\\t\\toptions={['Washington','California','Texas']}\\n\\t\\t\\tplaceholder=\\\"Choose a state...\\\"\\n\\t\\t\\tdefaultInputValue={state.value}\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n### Inferred text input\\n\\n```\\nimport { InferredText } from '@faithlife/styled-ui/dist/text-input.js';\\n```\\n\\n```react\\nshowSource: false\\nstate: { value: 'This value was guessed', confirmed: false }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>High Confidence</Label>\\n\\t\\t<InferredText\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.9}\\n\\t\\t\\tonChange={e => setState({ value: e.target.value, confirmed: true })}\\n\\t\\t\\tonConfirm={() => setState({ confirmed: true })}\\n\\t\\t\\tvalue={state.value}\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n```react\\nshowSource: false\\nstate: { value: 'This value was guessed', confirmed: false }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Medium Confidence</Label>\\n\\t\\t<InferredText\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.7}\\n\\t\\t\\tonChange={e => setState({ value: e.target.value, confirmed: true })}\\n\\t\\t\\tonConfirm={() => setState({ confirmed: true })}\\n\\t\\t\\tvalue={state.value}\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n```react\\nshowSource: false\\nstate: { value: 'This value was guessed', confirmed: false }\\n---\\n<div>\\n\\t<FormGroup>\\n\\t\\t<Label>Low Confidence</Label>\\n\\t\\t<InferredText\\n\\t\\t\\tconfidence={state.confirmed ? null : 0.6}\\n\\t\\t\\tonChange={e => setState({ value: e.target.value, confirmed: true })}\\n\\t\\t\\tonConfirm={() => setState({ confirmed: true })}\\n\\t\\t\\tvalue={state.value}\\n\\t\\t/>\\n\\t</FormGroup>\\n</div>\\n```\\n\\n### Focusable Input\\n```react\\nshowSource: false\\n---\\n<InferredTypeaheadFocusDemo />\\n```\\n\\n```react\\nshowSource: false\\n---\\n<InferredTextFocusDemo />\\n```\\n\\n\\n## Component PropTypes\\n```react\\nnoSource: true\\n---\\n<div>\\n\\t<DocgenTable component={InferredTypeahead} />\\n\\t<DocgenTable component={InferredText} />\\n</div>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/text-input/inferred.md\n// module id = 1352\n// module chunks = 1"],"sourceRoot":""}