{"version":3,"sources":["webpack:///static/12.0947c965.chunk.js","webpack:///./catalog/group-selector/variations.md?50d1","webpack:///./catalog/group-selector/variations.md"],"names":["webpackJsonp","1305","module","exports","__webpack_require__","React","createReactClass","PageRenderer","__esModule","default","WrappedPageRenderer","displayName","getInitialState","content","componentWillMount","render","createElement","Object","assign","this","props","state","__catalog_loader__","1339"],"mappings":"AAAAA,cAAc,KAERC,KACA,SAAUC,EAAQC,EAASC,GCFjC,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,IACAG,EAAAH,EAAA,KAAAG,YACAA,GAAAC,aACAD,IAAAE,QAEA,IAAAC,GAAAJ,GACAK,YAAA,sBACAC,gBAAA,WACA,OAAgBC,QAAAT,EAAA,QAEhBU,mBAAA,aAUAC,OAAA,WACA,MAAAV,GAAAW,cAAAT,EAAAU,OAAAC,UAAiEC,KAAAC,OAAeP,QAAAM,KAAAE,MAAAR,aAGhFH,GAAAY,oBAAA,EACApB,EAAAC,QAAAO,GDUMa,KACA,SAAUrB,EAAQC,GEtCxBD,EAAAC,QAAA","file":"static/12.0947c965.chunk.js","sourcesContent":["webpackJsonp([12],{\n\n/***/ 1305:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var React = __webpack_require__(3);\n    var createReactClass = __webpack_require__(79);\n    var PageRenderer = __webpack_require__(564).PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: __webpack_require__(1339)};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (false) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n/***/ }),\n\n/***/ 1339:\n/***/ (function(module, exports) {\n\nmodule.exports = \"### Group Selector with Groups\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tgroups: [{\\n\\t\\tname: 'Michaels Test Church',\\n\\t\\tgroupId: 1,\\n\\t\\tkind: 'church',\\n\\t\\tavatarUrl: '',\\n\\t\\trelationshipKind: 'participant',\\n\\t\\tmembershipKind: 'admin',\\n\\t\\tclaimable: false,\\n\\t},\\n\\t{\\n\\t\\tname: 'Example Community Church',\\n\\t\\tgroupId: 2,\\n\\t\\tkind: 'church',\\n\\t\\tavatarUrl: '',\\n\\t\\trelationshipKind: 'participant',\\n\\t\\tmembershipKind: 'admin',\\n\\t\\tclaimable: false,\\n\\t},\\n\\t{\\n\\t\\tname: 'Jordans Test Church',\\n\\t\\tgroupId: 3,\\n\\t\\tkind: 'church',\\n\\t\\tavatarUrl: '',\\n\\t\\trelationshipKind: 'participant',\\n\\t\\tmembershipKind: 'admin',\\n\\t\\tclaimable: false,\\n\\t},\\n\\t{\\n\\t\\tname: 'Cool Test Church',\\n\\t\\tgroupId: 4,\\n\\t\\tkind: 'church',\\n\\t\\tavatarUrl: '',\\n\\t\\trelationshipKind: 'participant',\\n\\t\\tmembershipKind: 'admin',\\n\\t\\tclaimable: false,\\n\\t}\\n\\t],\\n\\tselectedGroupId: 1,\\n\\tmobile: false,\\n}\\n---\\n<GroupSelectorDemo>\\n\\t<GroupSelector\\n\\t\\tonSearchInputChange={(search) => {\\n\\t\\t\\tsetState({ groupSearchResults: [{\\n\\t\\t\\t\\tname: 'Wrong Kind',\\n\\t\\t\\t\\tgroupId: 1,\\n\\t\\t\\t\\tkind: 'general',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Claimable Church',\\n\\t\\t\\t\\tgroupId: 2,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'none',\\n\\t\\t\\t\\tclaimable: true,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Not a Member',\\n\\t\\t\\t\\tgroupId: 3,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'none',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Member but Ain\\\\'t Admin',\\n\\t\\t\\t\\tgroupId: 4,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'member',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Search result 5',\\n\\t\\t\\t\\tgroupId: 5,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Search result 6',\\n\\t\\t\\t\\tgroupId: 6,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Search result 7',\\n\\t\\t\\t\\tgroupId: 7,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t}\\n\\n\\t\\t\\t]});\\n\\t\\t}}\\n\\t\\tonCreateGroup={(name, location) => {\\n\\t\\t\\tconst newGroup = {\\n\\t\\t\\t\\tname,\\n\\t\\t\\t\\tgroupId: 5,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t};\\n\\n\\t\\t\\tsetState({\\n\\t\\t\\t\\tgroups: [...state.groups, newGroup],\\n\\t\\t\\t\\tselectedGroupId: newGroup.groupId\\n\\t\\t\\t});\\n\\t\\t}}\\n\\t\\tonSelectionChange={(groupId, name) => { setState({selectedGroupId: groupId }) }}\\n\\t\\tgroups={state.groups}\\n\\t\\tselectedGroupId={state.selectedGroupId}\\n\\t\\tgroupSearchResults={state.groupSearchResults || state.groups}\\n\\t\\tgroupSelectorView={\\\"groups\\\"}\\n\\t\\tonGetStartedClick={() => {alert(\\\"Lets get started.\\\")}}\\n\\t\\tonClaimGroupClick={() => {alert(\\\"Claim the group!\\\")}}\\n\\t\\tonJoinGroupClick={() => {alert(\\\"Should Join the group, or request\\\")}}\\n\\t\\tonAdminRequestClick={() => {alert(\\\"Admin access requested\\\")}}\\n\\t\\tisMobile={false}\\n\\t/>\\n</GroupSelectorDemo>\\n```\\n\\n### Group Selector without Groups\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tgroups: [],\\n\\tselectedGroupId: 1,\\n\\tmobile: false,\\n}\\n---\\n<GroupSelectorDemo>\\n\\t<GroupSelector\\n\\t\\tonSearchInputChange={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tonCreateGroup={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tonSelectionChange={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tgroups={state.groups}\\n\\t\\tselectedGroupId={state.selectedGroupId}\\n\\t\\tgroupSearchResults={state.groups}\\n\\t\\tgroupSelectorView={\\\"no-groups\\\"}\\n\\t\\tonGetStartedClick={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tonClaimGroupClick={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tonJoinGroupClick={() => {alert(\\\"Should Join the group, or request\\\")}}\\n\\t\\tonAdminRequestClick={() => {alert(\\\"Admin access requested\\\")}}\\n\\t\\tisMobile={false}\\n\\t/>\\n</GroupSelectorDemo>\\n```\\n\"\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/12.0947c965.chunk.js","\n    var React = require('react');\n    var createReactClass = require('create-react-class');\n    var PageRenderer = require('catalog').PageRenderer;\n    if (PageRenderer.__esModule) {\n      PageRenderer = PageRenderer.default;\n    }\n    var WrappedPageRenderer = createReactClass({\n      displayName: 'WrappedPageRenderer',\n      getInitialState: function() {\n        return {content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")};\n      },\n      componentWillMount: function() {\n        var component = this;\n        if (module.hot) {\n          module.hot.accept(\"!!../../node_modules/raw-loader/index.js!./variations.md\", function() {\n            component.setState({\n              content: require(\"!!../../node_modules/raw-loader/index.js!./variations.md\")\n            })\n          })\n        }\n      },\n      render: function() {\n        return React.createElement(PageRenderer, Object.assign({}, this.props, {content: this.state.content}));\n      }\n    });\n    WrappedPageRenderer.__catalog_loader__ = true;\n    module.exports = WrappedPageRenderer;\n  \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./catalog/group-selector/variations.md\n// module id = 1305\n// module chunks = 12","module.exports = \"### Group Selector with Groups\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tgroups: [{\\n\\t\\tname: 'Michaels Test Church',\\n\\t\\tgroupId: 1,\\n\\t\\tkind: 'church',\\n\\t\\tavatarUrl: '',\\n\\t\\trelationshipKind: 'participant',\\n\\t\\tmembershipKind: 'admin',\\n\\t\\tclaimable: false,\\n\\t},\\n\\t{\\n\\t\\tname: 'Example Community Church',\\n\\t\\tgroupId: 2,\\n\\t\\tkind: 'church',\\n\\t\\tavatarUrl: '',\\n\\t\\trelationshipKind: 'participant',\\n\\t\\tmembershipKind: 'admin',\\n\\t\\tclaimable: false,\\n\\t},\\n\\t{\\n\\t\\tname: 'Jordans Test Church',\\n\\t\\tgroupId: 3,\\n\\t\\tkind: 'church',\\n\\t\\tavatarUrl: '',\\n\\t\\trelationshipKind: 'participant',\\n\\t\\tmembershipKind: 'admin',\\n\\t\\tclaimable: false,\\n\\t},\\n\\t{\\n\\t\\tname: 'Cool Test Church',\\n\\t\\tgroupId: 4,\\n\\t\\tkind: 'church',\\n\\t\\tavatarUrl: '',\\n\\t\\trelationshipKind: 'participant',\\n\\t\\tmembershipKind: 'admin',\\n\\t\\tclaimable: false,\\n\\t}\\n\\t],\\n\\tselectedGroupId: 1,\\n\\tmobile: false,\\n}\\n---\\n<GroupSelectorDemo>\\n\\t<GroupSelector\\n\\t\\tonSearchInputChange={(search) => {\\n\\t\\t\\tsetState({ groupSearchResults: [{\\n\\t\\t\\t\\tname: 'Wrong Kind',\\n\\t\\t\\t\\tgroupId: 1,\\n\\t\\t\\t\\tkind: 'general',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Claimable Church',\\n\\t\\t\\t\\tgroupId: 2,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'none',\\n\\t\\t\\t\\tclaimable: true,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Not a Member',\\n\\t\\t\\t\\tgroupId: 3,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'none',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Member but Ain\\\\'t Admin',\\n\\t\\t\\t\\tgroupId: 4,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'member',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Search result 5',\\n\\t\\t\\t\\tgroupId: 5,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Search result 6',\\n\\t\\t\\t\\tgroupId: 6,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\tname: 'Search result 7',\\n\\t\\t\\t\\tgroupId: 7,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t}\\n\\n\\t\\t\\t]});\\n\\t\\t}}\\n\\t\\tonCreateGroup={(name, location) => {\\n\\t\\t\\tconst newGroup = {\\n\\t\\t\\t\\tname,\\n\\t\\t\\t\\tgroupId: 5,\\n\\t\\t\\t\\tkind: 'church',\\n\\t\\t\\t\\tavatarUrl: '',\\n\\t\\t\\t\\trelationshipKind: 'participant',\\n\\t\\t\\t\\tmembershipKind: 'admin',\\n\\t\\t\\t\\tclaimable: false,\\n\\t\\t\\t};\\n\\n\\t\\t\\tsetState({\\n\\t\\t\\t\\tgroups: [...state.groups, newGroup],\\n\\t\\t\\t\\tselectedGroupId: newGroup.groupId\\n\\t\\t\\t});\\n\\t\\t}}\\n\\t\\tonSelectionChange={(groupId, name) => { setState({selectedGroupId: groupId }) }}\\n\\t\\tgroups={state.groups}\\n\\t\\tselectedGroupId={state.selectedGroupId}\\n\\t\\tgroupSearchResults={state.groupSearchResults || state.groups}\\n\\t\\tgroupSelectorView={\\\"groups\\\"}\\n\\t\\tonGetStartedClick={() => {alert(\\\"Lets get started.\\\")}}\\n\\t\\tonClaimGroupClick={() => {alert(\\\"Claim the group!\\\")}}\\n\\t\\tonJoinGroupClick={() => {alert(\\\"Should Join the group, or request\\\")}}\\n\\t\\tonAdminRequestClick={() => {alert(\\\"Admin access requested\\\")}}\\n\\t\\tisMobile={false}\\n\\t/>\\n</GroupSelectorDemo>\\n```\\n\\n### Group Selector without Groups\\n\\n```react\\nshowSource: true\\nstate: {\\n\\tgroups: [],\\n\\tselectedGroupId: 1,\\n\\tmobile: false,\\n}\\n---\\n<GroupSelectorDemo>\\n\\t<GroupSelector\\n\\t\\tonSearchInputChange={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tonCreateGroup={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tonSelectionChange={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tgroups={state.groups}\\n\\t\\tselectedGroupId={state.selectedGroupId}\\n\\t\\tgroupSearchResults={state.groups}\\n\\t\\tgroupSelectorView={\\\"no-groups\\\"}\\n\\t\\tonGetStartedClick={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tonClaimGroupClick={() => {alert(\\\"handled by application\\\")}}\\n\\t\\tonJoinGroupClick={() => {alert(\\\"Should Join the group, or request\\\")}}\\n\\t\\tonAdminRequestClick={() => {alert(\\\"Admin access requested\\\")}}\\n\\t\\tisMobile={false}\\n\\t/>\\n</GroupSelectorDemo>\\n```\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./catalog/group-selector/variations.md\n// module id = 1339\n// module chunks = 12"],"sourceRoot":""}